{
  "openapi": "3.0.1",
  "info": {
    "version": "0.0.1",
    "title": "Swagger test",
    "description": "Showing off swagger-ui-express",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "consumes": ["application/json", "multipart/form-data"],
  "produces": ["application/json"],
  "servers": [
    { "url": "http://localhost:3000" },
    { "url": "https://yourpets-project-backend.onrender.com" }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Users",
      "description": "User endpoints"
    },
    {
      "name": "Notices",
      "description": "Notices endpoints"
    }
  ],

  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "409": {
            "description": "This email already in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmailInUsetError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "requestBody": {
          "description": "Login's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Invalid user data when trying to log in",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginError"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "User logout",
        "security": [{ "Bearer": [] }],

        "responses": {
          "204": {
            "description": "Logout successful",
            "content": {}
          },
          "401": {
            "description": "Unauthorized (Invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          }
        }
      }
    },
    "/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current user",
        "security": [{ "Bearer": [] }],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized (Invalid access token)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "patch": {
        "tags": ["Users"],
        "consumes": ["multipart/form-data"],
        "summary": "Update user's data by id",
        "security": [{ "Bearer": [] }],

        "requestBody": {
          "description": "User's data object",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Sucessful update operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestError"
                }
              }
            }
          },
          "401": {
            "description": "Not autorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedError"
                }
              }
            }
          }
        }
      }
    },
    "/notices": {
      "get":{
        "tags":["Notices"],
        "summary":"Get notices list",
        "parameters": [

        ]
      }
    }
  },

  "components": {
    "schemas": {
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Username",
            "example": "Boby"
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "description": "User's birthday in format YYYY-MM-DD",
            "example": "2000-01-01"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "example": "+380000000000"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Kherson"
          },
          "avatar": {
            "type": "string",
            "description": "URL to user's avatar image",
            "required": true,
            "format": "binary"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "User's Id",
            "example": "6559154b6ec175bb9e83b5e8"
          },
          "name": {
            "type": "string",
            "description": "Username",
            "example": "Boby"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "user@example.com"
          },
          "phone": {
            "type": "string",
            "description": "User's phone number",
            "example": "+380000000000"
          },
          "birthday": {
            "type": "string",
            "format": "date",
            "description": "User's birthday in format YYYY-MM-DD",
            "example": "1990-01-01"
          },
          "city": {
            "type": "string",
            "description": "User's city",
            "example": "Lviv"
          },
          "avatarURL": {
            "type": "string",
            "description": "The URL to the user's avatar",
            "example": "www.gravatar.com/avatar/9f947d80dcde0d8bdc7c3bb66e82e6c7"
          }
        }
      },
      "UnauthorizedError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message for error code 401",
            "example": "Unauthorized"
          }
        }
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Logout successful",
            "example": "Logout successful"
          }
        }
      },
      "LogoutRequest": {
        "type": "object",
        "description": "Logout request without any content"
      },
      "LoginError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Invalid user data when trying to log in",
            "example": "Email or password is wrong"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationRequest": {
        "type": "object",
        "required": ["name", "email", "password"],
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "Jhon"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "description": "User",
            "properties": {
              "name": {
                "type": "string",
                "description": "User's name",
                "example": "Jhon"
              },
              "email": {
                "type": "string",
                "description": "User's email",
                "format": "email"
              }
            }
          },
          "token": {
            "type": "string",
            "description": "User's access token",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY1NTdkNjBiNDRhNmQwOTYzMWNhYzVmYiIsImlhdCI6MTcwMDI1NTI0MywiZXhwIjoxNzAwMzM4MDQzfQ.LiWHj5BsjEWGWZizrVsuGqxc_hTEliPanbIyFssiu7o"
          }
        }
      },
      "BadRequestError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message for error code 400",
            "example": "Bad request"
          }
        }
      },
      "EmailInUsetError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message for error code 409",
            "example": "Email already in use"
          }
        }
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
